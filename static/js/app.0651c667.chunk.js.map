{"version":3,"sources":["constants/colors.js","constants/TextCustom.js","components/EditButton.js","firebaseConfig.js","firebase.js","screens/Account.js","components/PrimaryButton.js","components/Shimmer.js","screens/Explore.js","components/SecondaryButton.js","screens/LoginScreen.js","components/DishItem.js","screens/Cart.web.js","screens/EditAccount.js","screens/RestaurantScreen.js","navigation/linking.js","navigation/RootNavigator.web.js","App.js","assets/nonveg.png","assets/veg.png"],"names":["default","light","dark","TextCustom","props","Text","style","styles","text","numberOfLines","children","StyleSheet","create","color","EditButton","TouchableOpacity","onPress","padding","button","colors","textTransform","fontWeight","fontSize","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore","getFirestore","auth","getAuth","Account","useState","update","setUpdate","UID","currentUser","uid","userRef","doc","nameOfUser","setNameOfUser","phone","setPhone","email","setEmail","graduation","setGraduation","useEffect","a","async","getDoc","querySnapshot","data","phoneNumber","Name","Email","graduationYear","getDetails","navigation","useNavigation","Item","View","generalInfoStyles","container","borderColor","borderBottomWidth","paddingVertical","itemText","flexDirection","justifyContent","alignItems","paddingHorizontal","navigate","toUpdate","ScrollView","horizontal","Entypo","name","size","signOut","marginBottom","backgroundColor","PrimaryButton","Platform","OS","androidContainer","width","useWindowDimensions","Pressable","android_ripple","androidPressable","activeOpacity","borderRadius","overflow","height","shimmer","SCREEN_WIDTH","Dimensions","get","COLORS","LOCATIONS","ANIMATION","Animated","Value","linear","interpolate","inputRange","outputRange","runAnimation","setValue","timing","toValue","duration","easing","Easing","useNativeDriver","start","Shimmer","positionX","setPositionX","viewRef","ref","onLayout","measure","_x","_y","_width","_height","pageX","_pageY","flex","left","transform","translateX","LinearGradient","x","y","end","locations","LoadingRestaurantItem","restaurantStyles","imageContainer","aspectRatio","detailsContainer","Explore","selectedHostel","setSelectedHostel","roomNumber","setRoomNumber","roomNo","NaN","hostel","address","setAddress","restaurants","setRestaurants","isAddressModalVisible","setIsAddressModalVisible","isLoaded","setIsLoaded","getAddress","getRestaurants","setOptions","headerTitle","DeliverTo","handleHostelIdentifier","restaurantArray","getDocs","collection","forEach","push","id","toggleAddressModal","SimpleLineIcons","RestaurantItem","restaurantID","restaurantName","Image","source","uri","imageURI","image","titleText","ratingContainer","marginRight","rating","cuisines","marginTop","searchContainer","Feather","TextInput","placeholder","placeholderTextColor","searchInput","isVisible","onBackButtonPress","animationInTiming","onBackdropPress","addressModalContainer","value","onChangeText","v","replace","keyboardType","textAlign","addressInput","selectedValue","onValueChange","itemValue","itemIndex","mode","dropdownIconColor","label","setDoc","parseInt","merge","FlatList","showsHorizontalScrollIndicator","renderItem","item","keyExtractor","marginHorizontal","heading","borderWidth","alignSelf","borderBottomColor","restaurantContainer","marginVertical","SecondaryButton","LoginScreen","otp","setOtp","verificationId","setVerificationId","handleSendOTP","console","log","setUpRecaptcha","appVerifier","window","recaptchaVerifier","signInWithPhoneNumber","then","confirmationResult","alert","catch","err","current","useRef","useDeviceLanguage","RecaptchaVerifier","response","onSignInSubmit","KeyboardAvoidingView","behavior","attemptInvisibleVerification","nativeID","inputContainer","input","maxLength","onSubmitEditing","buttonContainer","credential","PhoneAuthProvider","signInWithCredential","LoadingDishItem","dishStyles","vegIndicatorContainer","vegIndicator","detailsText","description","DishItem","isNonVeg","require","dishText","dishName","dishPrice","price","cartDishes","includes","addRemoveContainer","plusMinusButton","removeFromCart","AntDesign","quantityText","getQuantity","addToCart","addButton","addText","position","Cart","route","useIsFocused","setRestaurantID","setAllDishesData","cartDishIDs","setCartDishIDs","allCartDishesData","setAllCartDishesData","restaurantData","setRestaurantData","uniqueAllCartDishesData","setUniqueAllCartDishesData","setCartPrice","isCartEmpty","setIsCartEmpty","isLoading","setIsLoading","document","createElement","src","addListener","fetchCartInfo","tabBarBadge","length","userSnapshot","cartDishIDsArr","allDishesArr","cart","dishes","cartTotal","restoID","restaurantRef","restaurantSnapshot","restoData","cartDishesDataArr","i","j","dishID","unique","el","priceHandler","cartIDS","frequency","num","priceObj","freq","updateCart","arr","LoadingRestaurant","emptyCartStyles","animationData","textContainer","overScrollMode","star","ratingText","cuisinesContainer","nonveg","removeDishes","index","indexOf","splice","borderTopWidth","marginEnd","animation","EditAccount","params","editName","setEditName","editMail","setEditMail","editGraduation","setEditGraduation","itemStyles","title","autoComplete","editable","autoCapitalize","updateAndCancel","getName","getEmail","toString","getGraduation","margin","RestaurantScreen","isFocused","setDishes","setCartDishes","doNotRemoveState","setDoNotRemoveState","cartPrice","getDishes","getCart","cartPriceHandler","array","count","dishesArr","SafeAreaView","cartStyles","display","subContainer","linking","prefixes","config","screens","Home","path","Restaurant_Screen","Login","createNativeStackNavigator","Tab","createBottomTabNavigator","setBadgeNumber","setCartQuantity","Navigator","screenOptions","tabBarIcon","icon","focused","MaterialCommunityIcons","Screen","component","options","MyTheme","DefaultTheme","primary","background","card","RootNavigator","isUserSignedIn","setIsUserSignedIn","onAuthStateChanged","user","setTimeout","AuthStack","AppStack","NavigationContainer","theme","headerShown","App","LogBox","ignoreAllLogs","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.0651c667.chunk.js","sourcesContent":["export default {\r\n    primary: '#ffff',\r\n    // #F56694\r\n    // #EA7C69\r\n    // #fb8500\r\n    secondary: '#9288E0',\r\n    background: '#111111',\r\n    // #100F0F\r\n    dark: '#111111',\r\n    light: '#ABBBC2',\r\n    lighter: '#E0E6E9',\r\n    text: {\r\n        default:'#ffff',\r\n        light: '#ABBBC2',\r\n        dark: '#111111',\r\n    }\r\n}","import React, { Children } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport colors from './colors'\r\n\r\nconst TextCustom = (props) => {\r\n    return (<Text style={{ ...styles.text, ...props.style }} numberOfLines={props.numberOfLines}>\r\n        {props.children}\r\n    </Text>\r\n    )\r\n}\r\n\r\nexport default TextCustom\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        color: 'white'\r\n    }\r\n})\r\n","import React from 'react'\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport colors from '../constants/colors'\r\n\r\nconst EditButton = (props) => {\r\n    return (\r\n        <TouchableOpacity onPress={props.onPress} style={{ padding: 5 }}>\r\n            <Text style={styles.button}>{props.text}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default EditButton\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        color: colors.primary,\r\n        textTransform: 'uppercase',\r\n        fontWeight: '700',\r\n        fontSize: 12\r\n    }\r\n})\r\n","// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD5xpTIRjYNhsIfoUa6kaU6OveLp5yxPjk\",\r\n    authDomain: \"food-delivery-6fbf3.firebaseapp.com\",\r\n    projectId: \"food-delivery-6fbf3\",\r\n    storageBucket: \"food-delivery-6fbf3.appspot.com\",\r\n    messagingSenderId: \"657371352578\",\r\n    appId: \"1:657371352578:web:b15cd7862ca52a102a611b\"\r\n};\r\n\r\nexport {firebaseConfig}","// Import the functions you need from the SDKs you need\r\n// import * as firebase from \"firebase\";\r\nimport { initializeApp } from 'firebase/app';\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Initialize Firebase\r\n// let app\r\n// if (firebase.apps.length == 0) {\r\n//     app = initializeApp(firebaseConfig);\r\n// }\r\n// else{\r\n//     app = app()\r\n// }\r\n\r\ninitializeApp(firebaseConfig)\r\n\r\nconst firestore = getFirestore()\r\nconst auth = getAuth()\r\n\r\nexport { auth }\r\nexport { firestore }","import React, { useEffect, useState } from 'react'\r\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport colors from '../constants/colors'\r\nimport TextCustom from '../constants/TextCustom'\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport EditButton from '../components/EditButton';\r\nimport { auth, firestore } from '../firebase';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nconst Account = () => {\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    const UID = auth.currentUser.uid\r\n    const userRef = doc(firestore, 'users',UID)\r\n\r\n    const [nameOfUser, setNameOfUser] = useState('Hello user')\r\n    const [phone, setPhone] = useState(9999999999)\r\n    const [email, setEmail] = useState('user@comapny.com')\r\n    const [graduation, setGraduation] = useState(1999)\r\n\r\n    useEffect(() => {\r\n\r\n        const getDetails = async() =>{\r\n            const querySnapshot = await getDoc(userRef)\r\n            let data = querySnapshot.data()\r\n            setPhone(auth.currentUser.phoneNumber)\r\n            if (data) {\r\n                if(data.Name){\r\n                    setNameOfUser(data.Name)\r\n                }\r\n                if (data.Email) {\r\n                    setEmail(data.Email)\r\n                }\r\n                if (data.graduationYear) {\r\n                    setGraduation(data.graduationYear)\r\n                }\r\n                // console.log(doc.data())\r\n                setUpdate(false)\r\n    \r\n                // get initial input state from firestore\r\n            }\r\n        }\r\n        getDetails()\r\n        return\r\n    }, [update!=false])\r\n\r\n    const handleSignOut = () => {\r\n        auth\r\n            .signOut()\r\n    }\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const Item = (props) => {\r\n        return (\r\n            <View onPress={props.onPress} style={[generalInfoStyles.container, { borderColor: colors.light, borderBottomWidth:0, paddingVertical:15}]}>\r\n                <TouchableOpacity onPress={props.onPress}>\r\n                    <Text style={styles.itemText}>{props.text}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n    const GeneralInfo = () => {\r\n        return (\r\n            <View style={[generalInfoStyles.container]}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingHorizontal: 2, paddingVertical: 5 }}>\r\n                    <Text style={{ textTransform: 'uppercase', fontSize: 18, fontWeight: '700', color:colors.text.default  }}>{nameOfUser}</Text>\r\n                    <EditButton text=\"Edit\" onPress={() => navigation.navigate('Edit_Account',{\r\n                        toUpdate:setUpdate\r\n                    })} />\r\n                </View>\r\n                <ScrollView horizontal>\r\n                    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                        <Text style={{ color: colors.text.light }}>{phone}</Text>\r\n                        <Entypo name=\"dot-single\" size={24} color={colors.light} />\r\n                        <Text style={{ color: colors.text.light }}>{email}</Text>\r\n                        <Entypo name=\"dot-single\" size={24} color={colors.light} />\r\n                        <Text style={{ color: colors.text.light }}>{graduation}</Text>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n    return (\r\n        <View>\r\n            <GeneralInfo />\r\n            <Item text=\"Orders\"  />\r\n            <Item text=\"Logout\" onPress={() => handleSignOut()} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Account\r\n\r\nconst generalInfoStyles = StyleSheet.create({\r\n    container: {\r\n        borderBottomWidth: 3,\r\n        borderColor: colors.primary,\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        marginBottom:10,\r\n        backgroundColor:colors.dark\r\n    }\r\n})\r\nconst styles = StyleSheet.create({\r\n    itemText:{\r\n        color: colors.text.default,\r\n        textTransform:'uppercase',\r\n        fontWeight:'700'\r\n    }\r\n})\r\n","import React from 'react'\r\nimport { StyleSheet, Text, View, useWindowDimensions, TouchableOpacity, Pressable, Platform } from 'react-native'\r\nimport colors from '../constants/colors'\r\n\r\nconst PrimaryButton = (props) => {\r\n    return (\r\n        <>\r\n            {Platform.OS == \"android\" ?\r\n                <View style={[styles.androidContainer, { ...props.style, width: 0.4 * useWindowDimensions().width }]}>\r\n                    <Pressable android_ripple={{ color: colors.light }}\r\n                        style={styles.androidPressable}\r\n                        onPress={props.onPress}>\r\n                        <View style={styles.container}>\r\n                            <Text style={styles.text}>{props.text}</Text>\r\n                        </View>\r\n                    </Pressable>\r\n                </View>\r\n                :\r\n                <TouchableOpacity activeOpacity={0.7} onPress={props.onPress} style={{ ...props.style, width: 0.4 * useWindowDimensions().width }}>\r\n                    <View style={[styles.container, { backgroundColor: colors.primary, borderRadius: 5 }]}>\r\n                        <Text style={styles.text}>{props.text}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrimaryButton\r\n\r\nconst styles = StyleSheet.create({\r\n    androidContainer: {\r\n        overflow: \"hidden\",\r\n        borderRadius: 5\r\n    },\r\n    androidPressable: {\r\n        backgroundColor: colors.primary\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        height: 45,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    text: {\r\n        textTransform: 'uppercase',\r\n        color: colors.text.dark,\r\n        fontWeight: '700',\r\n        fontSize: 15\r\n    }\r\n\r\n})\r\n","import React, { useState } from 'react';\r\nimport { Dimensions, StyleSheet, View, Animated, Easing } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst styles = StyleSheet.create({\r\n  shimmer: {\r\n    overflow: 'hidden',\r\n    backgroundColor: '#BBBBBB',\r\n  },\r\n});\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('screen').width;\r\nconst START = -1;\r\nconst END = 1;\r\nconst DURATION = 2000;\r\nconst COLORS = ['#BBBBBB', '#A1A1A1', '#BBBBBB'];\r\nconst LOCATIONS = [0.3, 0.5, 0.7];\r\nconst ANIMATION = new Animated.Value(START);\r\n\r\nconst runAnimation = () => {\r\n  ANIMATION.setValue(START);\r\n  Animated.timing(ANIMATION, {\r\n    toValue: END,\r\n    duration: DURATION,\r\n    easing: Easing.linear(),\r\n    useNativeDriver: true,\r\n  }).start(runAnimation);\r\n};\r\n\r\nconst linear = ANIMATION.interpolate({\r\n  inputRange: [START, END],\r\n  outputRange: [-SCREEN_WIDTH, SCREEN_WIDTH],\r\n});\r\n\r\nrunAnimation();\r\n\r\nconst Shimmer = ({ width, height }) => {\r\n  const [positionX, setPositionX] = useState(null);\r\n  let viewRef = null;\r\n  return (\r\n    <View\r\n      style={[styles.shimmer, { width, height }]}\r\n      ref={ref => (viewRef = ref)}\r\n      onLayout={() => {\r\n        if (viewRef) {\r\n          viewRef.measure((_x, _y, _width, _height, pageX, _pageY) => {\r\n            setPositionX(pageX);\r\n          });\r\n        }\r\n      }}>\r\n      {positionX !== null && (\r\n        <Animated.View\r\n          style={{\r\n            flex: 1,\r\n            left: -positionX,\r\n            transform: [{ translateX: linear }],\r\n          }}>\r\n          <LinearGradient\r\n            style={{ flex: 1, width: SCREEN_WIDTH }}\r\n            start={{ x: 0, y: 0 }}\r\n            end={{ x: 1, y: 0 }}\r\n            locations={LOCATIONS}\r\n            colors={COLORS}\r\n          />\r\n        </Animated.View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Shimmer;\r\n","import { useNavigation } from '@react-navigation/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity, View, useWindowDimensions, TextInput, Image, FlatList, Platform } from 'react-native'\r\nimport TextCustom from '../constants/TextCustom'\r\nimport { auth, firestore } from '../firebase'\r\nimport { SimpleLineIcons } from '@expo/vector-icons';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport colors from '../constants/colors'\r\nimport { Feather } from '@expo/vector-icons';\r\nimport Modal from \"react-native-modal\";\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport PrimaryButton from '../components/PrimaryButton'\r\nimport { collection, doc, getDoc, getDocs, setDoc } from \"firebase/firestore\"; \r\nimport Shimmer from '../components/Shimmer'\r\n\r\nconst Explore = () => {\r\n\r\n    const [selectedHostel, setSelectedHostel] = useState()\r\n    const [roomNumber, setRoomNumber] = useState()\r\n    const [address, setAddress] = useState({ roomNo: NaN, hostel: null })\r\n    const [restaurants, setRestaurants] = useState([])\r\n    const [isAddressModalVisible, setIsAddressModalVisible] = useState(false)\r\n    const [count, setCount] = useState(0)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    const user = auth.currentUser\r\n    const UID = user.uid\r\n    const userRef = doc(firestore, 'users', UID)\r\n\r\n    useEffect(() => {\r\n        const getAddress = async() =>{\r\n            const querySnapshot = await getDoc(userRef)\r\n            let data = querySnapshot.data()\r\n            if (data.address) {\r\n                setAddress({ roomNo: data.address.roomNumber, hostel: data.address.hostel })\r\n            }\r\n        }\r\n        getAddress()\r\n        return\r\n    }, [])\r\n    useEffect(() => {\r\n        getRestaurants()\r\n        return\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerTitle: () => <DeliverTo />\r\n        })\r\n    }, [address])\r\n\r\n    const navigation = useNavigation()\r\n\r\n\r\n\r\n    let handleHostelIdentifier\r\n    if (address.hostel == 'girls') {\r\n        handleHostelIdentifier = \"Girls\"\r\n    }\r\n    else if (address.hostel == 'boys1') {\r\n        handleHostelIdentifier = \"Boys(Old)\"\r\n    }\r\n    else if (address.hostel == 'boys2') {\r\n        handleHostelIdentifier = \"Boys(New)\"\r\n    }\r\n    else {\r\n        handleHostelIdentifier = NaN\r\n    }\r\n\r\n\r\n    let restaurantArray = []\r\n    const getRestaurants = async () => {\r\n        const querySnapshot = await getDocs(collection(firestore,'restaurants'))\r\n        querySnapshot.forEach((doc)=>{\r\n            restaurantArray.push({...doc.data(), id:doc.id})\r\n        })\r\n        setRestaurants(restaurantArray)\r\n        setIsLoaded(true)\r\n    }\r\n    const DeliverTo = () => {\r\n        return (\r\n            <View>\r\n                <TouchableOpacity style={{ flexDirection: 'row', alignItems: 'flex-end', justifyContent:Platform.OS==\"ios\"?\"center\":null }} onPress={toggleAddressModal}>\r\n                    <Text style={{color:colors.text.default}}>Deliver to  </Text>\r\n                    <SimpleLineIcons name=\"arrow-down\" size={14} color=\"white\" />\r\n                </TouchableOpacity>\r\n                <TextCustom style={{ color: colors.primary }} numberOfLines={1}>{address.roomNo} Room number in {handleHostelIdentifier} Hostel </TextCustom>\r\n            </View>)\r\n    }\r\n\r\n    const toggleAddressModal = () => {\r\n        setIsAddressModalVisible(!isAddressModalVisible)\r\n    }\r\n\r\n    const Search = () => {\r\n        return <View style={[styles.searchContainer]}>\r\n            <Feather name=\"search\" size={20} color={colors.light} />\r\n            <TextInput placeholder=\"Search for food, restaurant, etc.\" placeholderTextColor={colors.text.light} style={styles.searchInput} numberOfLines={1} />\r\n        </View>\r\n    }\r\n\r\n    const handleSaveAddress = async () => {\r\n        setAddress({ roomNo: roomNumber, hostel: selectedHostel })\r\n        toggleAddressModal()\r\n\r\n        setDoc(userRef, {address: {\r\n            roomNumber: parseInt(roomNumber),\r\n            hostel: selectedHostel\r\n        }}, {merge:true})\r\n    }\r\n\r\n    const LoadingRestaurant = () => {\r\n        return(\r\n            <>\r\n            <LoadingRestaurantItem/>\r\n            <LoadingRestaurantItem/>\r\n            <LoadingRestaurantItem/>\r\n            </>\r\n        )\r\n        \r\n    }\r\n    const RestaurantItem = (props) => {\r\n        return (\r\n            <TouchableOpacity activeOpacity={0.7} onPress={() => navigation.navigate('Restaurant_Screen', { restaurantID: props.id, restaurantName: props.name})} style={[restaurantStyles.container, { width: useWindowDimensions().width }]}>\r\n                <View style={restaurantStyles.imageContainer}>\r\n                    <Image source={{ uri: props.imageURI }} style={restaurantStyles.image} />\r\n                </View>\r\n                <View style={restaurantStyles.detailsContainer}>\r\n                    <Text numberOfLines={1} style={[restaurantStyles.titleText, { color: colors.text.default, }]}>{props.name}</Text>\r\n                    <View style={[restaurantStyles.ratingContainer,]}>\r\n                        <Entypo name=\"star\" size={16} color={colors.light} style={{ marginRight: 5 }} />\r\n                        <View>\r\n                            <Text style={restaurantStyles.rating}>{props.rating ? props.rating : \"Not available\"}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View>\r\n                        <Text numberOfLines={1} style={restaurantStyles.cuisines}>\r\n                            {props.cuisines}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={{ alignItems: 'center', marginTop: 10 }}>\r\n                <Search />\r\n            </View>\r\n            <Modal isVisible={isAddressModalVisible} onBackButtonPress={toggleAddressModal} animationInTiming={200} onBackdropPress={toggleAddressModal}>\r\n                <View style={styles.addressModalContainer}>\r\n                    <TextInput\r\n                        value={roomNumber}\r\n                        onChangeText={(v) => setRoomNumber(v.replace(/[^0-9]/g, ''))}\r\n                        placeholder=\"Room Number\"\r\n                        placeholderTextColor={colors.text.light}\r\n                        keyboardType=\"number-pad\"\r\n                        textAlign=\"center\"\r\n                        style={styles.addressInput} />\r\n                    <Text style={{ color: colors.text.light }}>Select hostel</Text>\r\n                    <Picker\r\n                        selectedValue={selectedHostel}\r\n                        onValueChange={(itemValue, itemIndex) =>\r\n                            setSelectedHostel(itemValue)\r\n                        }\r\n                        style={{ width: '80%', color: colors.text.light, alignItems: 'center' }}\r\n                        mode=\"dropdown\"\r\n                        dropdownIconColor={colors.light}\r\n                    >\r\n                        <Picker.Item label=\"Girls\" value=\"girls\" />\r\n                        <Picker.Item label=\"Boys(Old)\" value=\"boys1\" />\r\n                        <Picker.Item label=\"Boys(New)\" value=\"boys2\" />\r\n                    </Picker>\r\n                    <PrimaryButton text=\"Save Address\" onPress={handleSaveAddress} />\r\n                </View>\r\n            </Modal>\r\n\r\n            <>\r\n            {!isLoaded ?<LoadingRestaurant/>:\r\n            <FlatList\r\n                showsHorizontalScrollIndicator={false}\r\n                data={restaurants}\r\n                renderItem={({ item }) => <RestaurantItem name={item.restaurantName} rating={item.rating} cuisines={item.cuisines} imageURI={item.imageURI} id={item.id} />}\r\n                keyExtractor={item => item.id}\r\n            />\r\n            }\r\n            </>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport const LoadingRestaurantItem = () =>{\r\n    return(\r\n        <View style={[restaurantStyles.container, { width: useWindowDimensions().width }]}>\r\n            <View style={restaurantStyles.imageContainer}>\r\n                <View style={{ width: '100%', aspectRatio: 1, overflow: 'hidden', borderRadius: 5, }}>\r\n                    <Shimmer width='100%' height='100%' />\r\n                </View>\r\n            </View>\r\n            <View style={restaurantStyles.detailsContainer}>\r\n                <View style={{ width: 150, height: 15, marginBottom: 5 }}>\r\n                    <Shimmer width={'100%'} height={'100%'} />\r\n                </View>\r\n                <View style={{ width: 50, height: 15, marginBottom: 5 }}>\r\n                    <Shimmer width={'100%'} height={'100%'} />\r\n                </View>\r\n                <View style={{ width: 100, height: 15 }}>\r\n                    <Shimmer width={'100%'} height={'100%'} />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Explore\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginHorizontal: 10,\r\n        flex: 1\r\n    },\r\n    heading: {\r\n        fontSize: 28\r\n    },\r\n    searchContainer: {\r\n        flexDirection: 'row',\r\n        borderWidth: 1,\r\n        borderColor: colors.light,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        paddingHorizontal: 15,\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    searchInput: {\r\n        marginHorizontal: 20\r\n    },\r\n    addressModalContainer: {\r\n        width: '75%',\r\n        paddingVertical: 20,\r\n        backgroundColor: colors.dark,\r\n        borderRadius: 10,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    addressInput: {\r\n        color: colors.text.default,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: colors.text.light,\r\n        width: '70%',\r\n        marginBottom: 20\r\n    },\r\n    restaurantContainer: {\r\n        height: 100,\r\n        marginVertical: 10,\r\n        flexDirection: 'row'\r\n    }\r\n})\r\n\r\nconst restaurantStyles = StyleSheet.create({\r\n    container: {\r\n        height: 100,\r\n        marginVertical: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    imageContainer: {\r\n        height: '100%',\r\n        width: '25%'\r\n    },\r\n    image: {\r\n        height: '100%',\r\n        width: '100%',\r\n        borderRadius: 5\r\n    },\r\n    detailsContainer: {\r\n        height: '100%', width: '75%',\r\n        justifyContent: 'center',\r\n        padding: 20\r\n    },\r\n    titleText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    ratingContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginVertical: 2\r\n    },\r\n    rating: {\r\n        color: colors.light,\r\n        fontWeight: '700',\r\n        fontSize: 12\r\n    },\r\n    cuisines: {\r\n        color: colors.light\r\n    }\r\n\r\n})\r\n","import React from 'react'\r\nimport { StyleSheet, Text, View, useWindowDimensions, TouchableOpacity, Pressable, Platform } from 'react-native'\r\nimport colors from '../constants/colors'\r\n\r\nconst SecondaryButton = (props) => {\r\n    return (\r\n        <>\r\n            {Platform.OS == \"android\" ?\r\n                <Pressable android_ripple={{ color: colors.primary }} onPress={props.onPress} style={{ width: 0.4 * useWindowDimensions().width, ...props.style }}>\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.text}>{props.text}</Text>\r\n                    </View>\r\n                </Pressable> :\r\n                <TouchableOpacity activeOpacity={0.7} onPress={props.onPress} style={{ width: 0.4 * useWindowDimensions().width, ...props.style }}>\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.text}>{props.text}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SecondaryButton\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: '100%',\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: colors.primary,\r\n        height: 45,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    text: {\r\n        textTransform: 'uppercase',\r\n        color: colors.primary,\r\n        fontWeight: '700',\r\n        fontSize: 15\r\n    }\r\n})\r\n","import { useNavigation } from '@react-navigation/core'\r\nimport { FirebaseRecaptchaVerifierModal } from 'expo-firebase-recaptcha';\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport { Keyboard, KeyboardAvoidingView, Platform, StyleSheet, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View } from 'react-native'\r\nimport { auth } from '../firebase'\r\nimport { firebaseConfig } from '../firebaseConfig'\r\n// import * as firebase from 'firebase'\r\nimport colors from '../constants/colors';\r\nimport PrimaryButton from '../components/PrimaryButton'\r\nimport SecondaryButton from '../components/SecondaryButton';\r\nimport { PhoneAuthProvider, RecaptchaVerifier, signInWithCredential, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const [phone, setPhone] = useState()\r\n    const [otp, setOtp] = useState()\r\n    const [verificationId, setVerificationId] = useState();\r\n\r\n    const handleSendOTP = async () => {\r\n        if (Platform.OS == \"web\") {\r\n            var phoneNumber = `+91${phone}`\r\n            console.log(phoneNumber)\r\n            setUpRecaptcha()\r\n            var appVerifier = window.recaptchaVerifier\r\n            signInWithPhoneNumber(auth, phoneNumber, appVerifier).then((confirmationResult) => {\r\n                alert(\"OTP has been sent\")\r\n                setVerificationId(confirmationResult)\r\n            }).catch((err) => alert(err))\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const verificationId = await signInWithPhoneNumber(\r\n                    auth,\r\n                    `+91${phone}`,\r\n                    recaptchaVerifier.current\r\n                );\r\n                setVerificationId(verificationId);\r\n                alert(\"OTP has been sent\")\r\n            } catch (err) {\r\n                alert(err)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleVerifyOTP = async () => {\r\n        try {\r\n            const credential = PhoneAuthProvider.credential(\r\n                verificationId.verificationId,\r\n                otp\r\n            );\r\n            await signInWithCredential(auth, credential);\r\n            alert(\"Phone verification successful\")\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n    const recaptchaVerifier = useRef(null);\r\n    const attemptInvisibleVerification = true;\r\n\r\n    auth.useDeviceLanguage()\r\n\r\n    const setUpRecaptcha = () => {\r\n        window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\r\n            'size': 'invisible',\r\n            'callback': (response) => {\r\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n                onSignInSubmit();\r\n            }\r\n        }, auth);\r\n    }\r\n\r\n    return (\r\n        // <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n        <KeyboardAvoidingView behavior={Platform.OS == 'ios' ? \"padding\" : 'height'}\r\n            style={styles.container}\r\n        >\r\n            {Platform.OS != \"web\" ?\r\n                <FirebaseRecaptchaVerifierModal\r\n                    ref={recaptchaVerifier}\r\n                    firebaseConfig={firebaseConfig}\r\n                    attemptInvisibleVerification={attemptInvisibleVerification}\r\n                /> :\r\n                <View nativeID='recaptcha-container' />\r\n            }\r\n\r\n            <View style={styles.inputContainer}>\r\n                <View style={[{ flexDirection: 'row', alignItems: 'center' }, styles.input]}>\r\n                    <Text style={{ marginRight: 10, color: 'black' }}>\r\n                        +91\r\n                    </Text>\r\n                    <TextInput\r\n                        placeholder=\"Mobile Number\"\r\n                        value={phone}\r\n                        onChangeText={v => setPhone(v.replace(/[^0-9]/g, ''))}\r\n                        keyboardType=\"number-pad\"\r\n                        style={{ width: '90%' }}\r\n                        maxLength={10}\r\n                        onSubmitEditing={handleSendOTP}\r\n                    />\r\n                </View>\r\n\r\n                <TextInput\r\n                    placeholder=\"OTP\"\r\n                    value={otp}\r\n                    onChangeText={v => setOtp(v.replace(/[^0-9]/g, ''))}\r\n                    style={styles.input}\r\n                    keyboardType=\"number-pad\"\r\n                    maxLength={6}\r\n                />\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n                <PrimaryButton onPress={handleSendOTP} text=\"Send OTP\" style={{ marginBottom: 10 }} />\r\n                <SecondaryButton text=\"Verify\" onPress={handleVerifyOTP} />\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n        // </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1\r\n    },\r\n    inputContainer: {\r\n        width: '80%'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 20\r\n    },\r\n})\r\n","import React from 'react'\r\nimport { Image, Platform, Pressable, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport colors from '../constants/colors';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport Shimmer from './Shimmer';\r\n\r\n\r\nconst DishItem = (props) => (\r\n    <View style={[dishStyles.container, { height: props.image ? 150 : 100 }]}>\r\n        <View style={dishStyles.detailsContainer}>\r\n            <View style={dishStyles.vegIndicatorContainer}>\r\n                {props.isNonVeg ?\r\n                    <Image source={require('../assets/nonveg.png')} style={dishStyles.vegIndicator} /> :\r\n                    <Image source={require('../assets/veg.png')} style={dishStyles.vegIndicator} />\r\n                }\r\n            </View>\r\n            <View style={dishStyles.detailsText}>\r\n                <Text style={dishStyles.dishText}>{props.dishName}</Text>\r\n                <Text style={dishStyles.dishPrice}>₹{props.price}</Text>\r\n                {props.description ? <Text style={dishStyles.description} numberOfLines={2} >{props.description}</Text> : null}\r\n            </View>\r\n        </View>\r\n        <View style={[dishStyles.imageContainer, { justifyContent: props.image ? 'flex-end' : 'center' }]}>\r\n            <Image source={{ uri: props.image ? props.image : null }} style={dishStyles.image} />\r\n\r\n            <View style={dishStyles.button}>\r\n                {!(props.cartDishes).includes(props.id) ?\r\n                    Platform.OS == \"android\" ?\r\n                        <Pressable style={dishStyles.addButton} android_ripple={{ color: colors.light }} onPress={props.addToCart}>\r\n                            <Text style={dishStyles.addText}>Add</Text>\r\n                        </Pressable>\r\n                        :\r\n                        <TouchableOpacity style={dishStyles.addButton} onPress={props.addToCart}>\r\n                            <Text style={dishStyles.addText}>Add</Text>\r\n                        </TouchableOpacity>\r\n                    :\r\n                    <View style={dishStyles.addRemoveContainer}>\r\n                        <TouchableOpacity style={dishStyles.plusMinusButton} onPress={props.removeFromCart}>\r\n                            <AntDesign name=\"minus\" size={16} color={colors.text.dark} />\r\n                        </TouchableOpacity>\r\n                        <Text style={dishStyles.quantityText}>{props.getQuantity}{/* dynamically change quantity, no of occurence of id in the array cartDishes */}</Text>\r\n                        <TouchableOpacity style={dishStyles.plusMinusButton} onPress={props.addToCart} /* on Press, push the item id to the array*/>\r\n                            <AntDesign name=\"plus\" size={16} color={colors.text.dark} />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                }\r\n            </View>\r\n        </View>\r\n    </View>\r\n);\r\n\r\nexport const LoadingDishItem = (props) => {\r\n    return (\r\n        <View style={[dishStyles.container, { height: props.image ? 150 : 100 }]}>\r\n            <View style={dishStyles.detailsContainer}>\r\n                <View style={dishStyles.vegIndicatorContainer}>\r\n                    <View style={dishStyles.vegIndicator}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                </View>\r\n                <View style={[dishStyles.detailsText,]}>\r\n                    <View style={{ height: 15, width: 100, marginBottom: 5 }}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                    <View style={{ height: 15, width: 50, marginBottom: 5 }}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                    {props.description ?\r\n                        <View style={{ height: 25, width: '90%' }}>\r\n                            <Shimmer width={'100%'} height={'100%'} />\r\n                        </View>\r\n                        :null\r\n                    }\r\n\r\n                </View>\r\n            </View>\r\n            <View style={[dishStyles.imageContainer, { justifyContent: props.image ? 'flex-end' : 'center' }]}>\r\n                {props.image ?\r\n                    <View style={[dishStyles.image, { overflow: \"hidden\" }]}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                    :\r\n                    <View style={[dishStyles.button, { overflow: 'hidden' }]}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>}\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nexport default DishItem\r\n\r\n\r\nconst dishStyles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"row\",\r\n        borderBottomWidth: 0.5,\r\n        paddingVertical: 10,\r\n        borderColor: colors.light,\r\n    },\r\n    detailsContainer: {\r\n        width: \"65%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    vegIndicatorContainer: {\r\n        marginRight: 12,\r\n    },\r\n    vegIndicator: {\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    detailsText: {\r\n        flex: 1\r\n    },\r\n    dishText: {\r\n        color: colors.text.default,\r\n        fontWeight: 'bold',\r\n        fontSize: 16\r\n    },\r\n    dishPrice: {\r\n        color: colors.text.light\r\n    },\r\n    description: {\r\n        color: colors.text.light,\r\n        fontSize: 10\r\n    },\r\n    imageContainer: {\r\n        width: \"35%\",\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: 10\r\n    },\r\n    button: {\r\n        position: 'absolute',\r\n        backgroundColor: colors.text.default,\r\n        width: '60%',\r\n        borderRadius: 5,\r\n        height: 30,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addButton: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n    },\r\n    addRemoveContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    plusMinusButton: {\r\n        height: '100%', flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    quantityText: {\r\n        flex: 0.7,\r\n        textAlign: 'center',\r\n        color: colors.text.dark,\r\n    },\r\n    addText: {\r\n        color: colors.text.dark,\r\n        fontWeight: '700',\r\n        textTransform: 'uppercase'\r\n    }\r\n\r\n});","import React, { useEffect, useState } from 'react'\r\nimport { FlatList, Image, Platform, Pressable, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport colors from '../constants/colors'\r\nimport { auth, firestore } from '../firebase';\r\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\r\nimport DishItem, { LoadingDishItem } from '../components/DishItem';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport LottieView from 'lottie-react-native';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport Lottie from 'lottie-react';\r\nimport Shimmer from '../components/Shimmer';\r\n\r\nconst Cart = ({ route, navigation }) => {\r\n    const auth = getAuth()\r\n    const UID = auth.currentUser.uid\r\n    const userRef = doc(firestore, 'users', UID)\r\n\r\n    let isFocused = useIsFocused()\r\n\r\n    const [restaurantID, setRestaurantID] = useState('')\r\n    const [allDishesData, setAllDishesData] = useState([])\r\n    const [cartDishIDs, setCartDishIDs] = useState([])\r\n    const [allCartDishesData, setAllCartDishesData] = useState([])\r\n    const [restaurantData, setRestaurantData] = useState({})\r\n    const [uniqueAllCartDishesData, setUniqueAllCartDishesData] = useState([])\r\n    const [cartPrice, setCartPrice] = useState(0)\r\n    const [isCartEmpty, setIsCartEmpty] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement(\"script\")\r\n        script.src = \"https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js\"\r\n    }, [])\r\n\r\n\r\n\r\n    // re- renders every time the screen is brought to focus \r\n    useEffect(() => {\r\n        const unsubscribe = navigation.addListener('focus', () => {\r\n            fetchCartInfo()\r\n        })\r\n        return unsubscribe\r\n    }, [navigation])\r\n\r\n    // sets the tab bar badge to the amount of items in the cart\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            tabBarBadge: cartDishIDs.length\r\n        })\r\n        if (cartDishIDs.length != 0) {\r\n            setIsCartEmpty(false)\r\n        }\r\n        else {\r\n            setIsCartEmpty(true)\r\n        }\r\n    }, [cartDishIDs])\r\n\r\n    // fetches the IDs of dishes in the cart and stores in a state variable\r\n    const fetchCartInfo = async () => {\r\n        const userSnapshot = await getDoc(userRef)\r\n        // data from the logged in user stored in \"data\"\r\n        let data = userSnapshot.data()\r\n        let cartDishIDsArr = []\r\n        let allDishesArr = []\r\n        if (data.cart) {\r\n            // array of all the IDs of dishes added in the cart of the user\r\n            cartDishIDsArr = data.cart.dishes\r\n            if (cartDishIDsArr == 0) {\r\n                setIsCartEmpty(true)\r\n            }\r\n            setCartDishIDs(data.cart.dishes)\r\n            setCartPrice(data.cart.cartTotal)\r\n\r\n            // restaurant ID of the restaurant whose dishes are in cart\r\n            setRestaurantID(data.cart.restaurantID)\r\n            let restoID = data.cart.restaurantID\r\n\r\n            const restaurantRef = doc(firestore, 'restaurants', restoID)\r\n            const restaurantSnapshot = await getDoc(restaurantRef)\r\n\r\n            setIsLoading(false)\r\n            // restaurant data stored in restoData\r\n            let restoData = restaurantSnapshot.data()\r\n            setRestaurantData(restoData)\r\n\r\n            // list of all dishes from that restaurant\r\n            allDishesArr = restoData.dishes\r\n            setAllDishesData(restoData.dishes)\r\n\r\n            // array of data of dishes in cart with information like price, non veg, name, dishID, etc. \r\n            let cartDishesDataArr = []\r\n            for (var i of allDishesArr) {\r\n                for (var j of cartDishIDsArr) {\r\n                    if (i.dishID == j) {\r\n                        cartDishesDataArr.push(i)\r\n                    }\r\n                }\r\n            }\r\n            setAllCartDishesData(cartDishesDataArr)\r\n\r\n            let arr = cartDishesDataArr\r\n            let unique = []\r\n            for (let el of arr) {\r\n                if (!unique.includes(el)) {\r\n                    unique.push(el)\r\n                }\r\n            }\r\n            // setting only the unique cart dishes which is later used to render Flatlist. Used for rendering only the unique dishes in the flatlist and later increasing the quantity only without adding more items to Flatlist \r\n            setUniqueAllCartDishesData(unique)\r\n        }\r\n        else { //i.e. the cart doesn't exist\r\n            setIsCartEmpty(true)\r\n        }\r\n    }\r\n\r\n    // Responsible for handling the total cart value => returns total cart value (number) \r\n    const priceHandler = (cartIDS) => {\r\n        let frequency = {}\r\n        for (let num of cartIDS) {\r\n            frequency[num] = frequency[num] ? frequency[num] + 1 : 1\r\n        }\r\n        // This gives me frequency of cart Items as {\"dishID\": occurrences, \"anotherDishID\": occurrences }\r\n\r\n        let priceObj = {}\r\n        allCartDishesData.forEach(el => {\r\n            priceObj[el.dishID] = el.price\r\n        })\r\n        // This gives me priceObj as {\"dishID\":itsPrice, \"anotherDishID\":itsPrice}\r\n\r\n        let price = 0\r\n        for (let i in priceObj) {\r\n            for (let j in frequency) {\r\n                if (j == i) {\r\n                    price += (priceObj[i] * frequency[j])\r\n                }\r\n            }\r\n        }\r\n        setCartPrice(price)\r\n        return price\r\n    }\r\n\r\n\r\n    // Returns the quantity of every dish in the cart => Return type = number\r\n    const getQuantity = (id) => {\r\n        let freq = {}\r\n        let arr = [...cartDishIDs]\r\n        for (let num of arr) {\r\n            freq[num] = freq[num] ? freq[num] + 1 : 1\r\n        }\r\n        return freq[id]\r\n    }\r\n\r\n    // Responsible for updating changes to the firestore database. Changes => array of dishIDs, restaurantID (whose dishes are in the cart), cartTotal\r\n    const updateCart = async (arr, price) => {\r\n        setDoc(userRef, {\r\n            cart: {\r\n                dishes: arr,\r\n                restaurantID: restaurantID,\r\n                cartTotal: price\r\n            }\r\n        }, { merge: true })\r\n    }\r\n\r\n    // Responsible for reducing item quantity by 1 and later updating that value to the database\r\n    const removeFromCart = async (id) => {\r\n        let removeDishes = [...cartDishIDs]\r\n        let index = removeDishes.indexOf(id)\r\n        if (index > -1) {\r\n            removeDishes.splice(index, 1)\r\n        }\r\n        setCartDishIDs(removeDishes)\r\n        let price = priceHandler(removeDishes)\r\n        updateCart(removeDishes, price)\r\n        // priceHandler(removeDishes)\r\n        // add update Cart i.e. to handle updates on firestore\r\n        // add cartpricehandler i.e. to handle total amount in the cart\r\n    }\r\n\r\n    // Responsible for increasing item quantity by 1 and later updating that value to the database\r\n    const addToCart = (id) => {\r\n        let arr = [...cartDishIDs]\r\n        arr.push(id)\r\n        setCartDishIDs(arr)\r\n        let price = priceHandler(arr)\r\n        updateCart(arr, price)\r\n    }\r\n\r\n\r\n    const RestaurantDetails = () => (\r\n        <View style={restaurantStyles.container}>\r\n            <View style={restaurantStyles.imageContainer}>\r\n                <Image source={{ uri: restaurantData.imageURI }} style={restaurantStyles.image} />\r\n            </View>\r\n            <View>\r\n                <Text style={restaurantStyles.restaurantName}>{restaurantData.restaurantName ? restaurantData.restaurantName : \"Restaurant\"}</Text>\r\n                <View style={restaurantStyles.ratingContainer}>\r\n                    <Entypo name=\"star\" size={16} color={colors.light} style={restaurantStyles.star} />\r\n                    <View>\r\n                        <Text style={restaurantStyles.ratingText}>{restaurantData.rating ? restaurantData.rating : \"Not available\"}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={restaurantStyles.cuisinesContainer}>\r\n                    <Text style={restaurantStyles.cuisines}>{restaurantData.cuisines}</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n\r\n    const LoadingRestaurant = () => {\r\n        return (\r\n            <View style={restaurantStyles.container}>\r\n                <View style={restaurantStyles.imageContainer}>\r\n                    <View style={{ width: '100%', aspectRatio: 1, overflow: 'hidden', borderRadius: 5, }}>\r\n                        <Shimmer width='100%' height='100%' />\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                    <View style={{ width: 150, height: 15, marginBottom: 5 }}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                    <View style={{ width: 50, height: 15, marginBottom: 5 }}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                    <View style={{ width: 100, height: 15 }}>\r\n                        <Shimmer width={'100%'} height={'100%'} />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n    const Loading = () => {\r\n        return (\r\n            <View>\r\n                <LoadingRestaurant />\r\n                <View style={{ paddingHorizontal: 10 }}>\r\n                    <LoadingDishItem />\r\n                    <LoadingDishItem />\r\n                    <LoadingDishItem />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n    return (<>\r\n        {isLoading ?\r\n            <Loading />\r\n            :\r\n            <>\r\n                {isCartEmpty\r\n                    ?\r\n                    <View style={emptyCartStyles.container}>\r\n                        <div>\r\n                            <Lottie animationData={require('../assets/animations/emptyCart.json')} style={{ width: '90%' }} />\r\n                        </div>\r\n                        <View style={emptyCartStyles.textContainer}>\r\n                            <Text style={emptyCartStyles.text}>{`My stomach is empty.`}</Text>\r\n                            <Text style={emptyCartStyles.text}>{`Please add some items in it!`}</Text>\r\n                        </View>\r\n                    </View>\r\n                    :\r\n                    <ScrollView style={styles.container} overScrollMode='never'>\r\n                        <RestaurantDetails />\r\n                        <FlatList\r\n                            style={{ backgroundColor: colors.dark, paddingHorizontal: 10 }}\r\n                            data={uniqueAllCartDishesData}\r\n                            keyExtractor={item => item.dishID}\r\n                            renderItem={({ item }) => (\r\n                                <DishItem\r\n                                    cartDishes={cartDishIDs}\r\n                                    dishName={item.name}\r\n                                    id={item.dishID}\r\n                                    price={item.price}\r\n                                    isNonVeg={item.nonveg}\r\n                                    getQuantity={getQuantity(item.dishID)}\r\n                                    removeFromCart={() => removeFromCart(item.dishID)}\r\n                                    addToCart={() => addToCart(item.dishID)}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </ScrollView>\r\n                }\r\n            </>\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        // margin: 10\r\n    }\r\n})\r\n\r\nconst restaurantStyles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        borderColor: colors.light,\r\n        borderBottomWidth: 1.5,\r\n        backgroundColor: colors.dark,\r\n        padding: 10,\r\n        marginBottom: 20,\r\n        borderTopWidth: 1.5\r\n    },\r\n    imageContainer: {\r\n        width: 75,\r\n        height: 75,\r\n        marginEnd: 20,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: 5\r\n    },\r\n    restaurantName: {\r\n        color: colors.text.default,\r\n        fontWeight: '700',\r\n        fontSize: 16\r\n    },\r\n    ratingContainer:\r\n    {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginTop: 2\r\n    },\r\n    star: {\r\n        marginRight: 5\r\n    },\r\n    ratingText: {\r\n        fontWeight: '700',\r\n        color: colors.light,\r\n        fontSize: 13,\r\n        textAlign: 'center'\r\n    },\r\n    cuisinesContainer: {\r\n        marginTop: 2\r\n    },\r\n    cuisines: {\r\n        color: colors.light\r\n    }\r\n})\r\n\r\nconst emptyCartStyles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%'\r\n    },\r\n    animation: {\r\n        width: '90%'\r\n    },\r\n    textContainer: {\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    text: {\r\n        color: colors.text.light, fontSize: 18, fontWeight: '700', width: '70%', textAlign: 'center'\r\n    }\r\n})","import { getAuth } from 'firebase/auth'\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport EditButton from '../components/EditButton'\r\nimport PrimaryButton from '../components/PrimaryButton'\r\nimport SecondaryButton from '../components/SecondaryButton'\r\nimport colors from '../constants/colors'\r\nimport { auth, firestore } from '../firebase'\r\n\r\nconst EditAccount = ({route, navigation}) => {\r\n    const auth = getAuth()\r\n    const {toUpdate} = route.params\r\n\r\n    const [nameOfUser, setNameOfUser] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [graduation, setGraduation] = useState('')\r\n\r\n    const [editName, setEditName] = useState(false)\r\n    const [editMail, setEditMail] = useState(false)\r\n    const [editGraduation, setEditGraduation] = useState(false)\r\n\r\n    const UID = auth.currentUser.uid\r\n    // const userRef = firestore.collection('users').doc(UID)\r\n    const userRef = doc(firestore, 'users',UID)\r\n\r\n    useEffect(() => {\r\n        const getDetails = async() =>{\r\n            const querySnapshot = await getDoc(userRef)\r\n            let data = querySnapshot.data()\r\n            if (data) {\r\n                if (data.Name){\r\n                    setNameOfUser(data.Name)\r\n                }\r\n                if (data.Email){\r\n                    setEmail(data.Email)\r\n                }\r\n                if (data.graduationYear){\r\n                    setGraduation(data.graduationYear)\r\n                }\r\n\r\n                // get initial input state from firestore\r\n\r\n                // when the user presses cancel on any form, the state should be set to the values from the firestore\r\n            }\r\n        }\r\n        getDetails()\r\n        return\r\n    }, [])\r\n\r\n    const getName = async() =>{\r\n        const querySnapshot = await getDoc(userRef)\r\n        let data = querySnapshot.data()\r\n        if (data){\r\n            if (data.Name){\r\n                setNameOfUser(data.Name)\r\n            }\r\n        }\r\n    }\r\n\r\n    const getEmail = async() =>{\r\n\r\n        const querySnapshot = await getDoc(userRef)\r\n        let data = querySnapshot.data()\r\n        if (data){\r\n            if (data.Email){\r\n                setEmail(data.Email)\r\n            }\r\n        }\r\n    }\r\n\r\n    const getGraduation = async() =>{\r\n        const querySnapshot = await getDoc(userRef)\r\n        let data = querySnapshot.data()\r\n        if (data){\r\n            if (data.graduationYear){\r\n                setGraduation(data.graduationYear)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleNameUpdate =  () => {\r\n        setDoc(userRef, { Name: nameOfUser }, { merge: true })\r\n        setEditName(false)\r\n        toUpdate(true)\r\n    }\r\n\r\n    const handleMailUpdate = () => {\r\n        setDoc(userRef, { Email: email }, { merge: true })\r\n        setEditMail(false)\r\n        toUpdate(true)\r\n    }\r\n\r\n    const handleGraduationUpdate = () => {\r\n        setDoc(userRef, {graduationYear: parseInt(graduation)},{merge:true})\r\n        setEditGraduation(false)\r\n        toUpdate(true)\r\n    }\r\n\r\n    const NameButtons = () => {\r\n        return (\r\n            <View style={styles.updateAndCancel}>\r\n                <PrimaryButton text=\"Update\" onPress={() => handleNameUpdate()} />\r\n                <SecondaryButton text=\"Cancel\" onPress={() => {\r\n                    setEditName(false)\r\n                    getName()\r\n                    }} />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const MailButtons = () => {\r\n        return (\r\n            <View style={styles.updateAndCancel}>\r\n                <PrimaryButton text=\"Update\" onPress={() => handleMailUpdate()} />\r\n                <SecondaryButton text=\"Cancel\" onPress={() => {\r\n                    setEditMail(false)\r\n                    getEmail()\r\n                    }} />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const GraduationButtons = () => {\r\n        return (\r\n            <View style={styles.updateAndCancel}>\r\n                <PrimaryButton text=\"Update\" onPress={() => handleGraduationUpdate()} />\r\n                <SecondaryButton text=\"Cancel\" onPress={() => {\r\n                    setEditGraduation(false)\r\n                    getGraduation()\r\n                    }} />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View>\r\n\r\n            {/* For name */}\r\n            <>\r\n                <View style={[itemStyles.container, { borderColor: editName ? colors.primary : colors.light }]}>\r\n                    <View>\r\n                        <Text style={itemStyles.title}>Name</Text>\r\n                    </View>\r\n                    <View style={itemStyles.inputContainer}>\r\n                        <TextInput\r\n                            style={itemStyles.input}\r\n                            value={nameOfUser}\r\n                            autoComplete=\"name\"\r\n                            placeholderTextColor={colors.text.default}\r\n                            editable={editName ? true : false}\r\n                            onChangeText={(v) => setNameOfUser(v)}\r\n                            autoCapitalize=\"words\"\r\n                        />\r\n                        <EditButton text=\"Edit\" onPress={() => setEditName(!editName)} />\r\n                    </View>\r\n\r\n                </View>\r\n                {editName ? <NameButtons /> : null}\r\n            </>\r\n\r\n            {/* For email */}\r\n            <>\r\n                <View style={[itemStyles.container, { borderColor: editMail ? colors.primary : colors.light }]}>\r\n                    <View>\r\n                        <Text style={itemStyles.title}>Email Address</Text>\r\n                    </View>\r\n                    <View style={itemStyles.inputContainer}>\r\n                        <TextInput\r\n                            style={itemStyles.input}\r\n                            value={email}\r\n                            autoCapitalize=\"none\"\r\n                            autoComplete=\"email\"\r\n                            placeholderTextColor={colors.text.default}\r\n                            editable={editMail ? true : false}\r\n                            onChangeText={(v) => setEmail(v)}\r\n                        />\r\n                        <EditButton text=\"Edit\" onPress={() => setEditMail(!editMail)} />\r\n                    </View>\r\n\r\n                </View>\r\n                {editMail ? <MailButtons /> : null}\r\n            </>\r\n\r\n            {/* For graduation */}\r\n\r\n            <>\r\n                <View style={[itemStyles.container, { borderColor: editGraduation ? colors.primary : colors.light }]}>\r\n                    <View>\r\n                        <Text style={itemStyles.title}>Graduation Year</Text>\r\n                    </View>\r\n                    <View style={itemStyles.inputContainer}>\r\n                        <TextInput\r\n                            style={itemStyles.input}\r\n                            value={graduation.toString()}\r\n                            placeholderTextColor={colors.text.default}\r\n                            editable={editGraduation ? true : false}\r\n                            onChangeText={(v) => setGraduation(v.replace(/[^0-9]/g, ''))}\r\n                            keyboardType={'number-pad'}\r\n                            maxLength={4}\r\n                        />\r\n                        <EditButton text=\"Edit\" onPress={() => setEditGraduation(!editGraduation)} />\r\n                    </View>\r\n\r\n                </View>\r\n                {editGraduation ? <GraduationButtons /> : null}\r\n            </>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default EditAccount\r\n\r\nconst styles = StyleSheet.create({\r\n    updateAndCancel:{\r\n        flexDirection: 'row', \r\n        justifyContent: 'space-between', \r\n        marginHorizontal: 25, \r\n        marginBottom: 10\r\n    }\r\n})\r\n\r\nconst itemStyles = StyleSheet.create({\r\n    container: {\r\n        margin: 10,\r\n        borderBottomWidth: 1,\r\n        padding: 5\r\n    },\r\n    title: {\r\n        textTransform: 'uppercase',\r\n        color: colors.text.light,\r\n        fontSize: 12\r\n    },\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: '75%',\r\n        color: colors.text.default,\r\n        fontWeight: '700',\r\n        fontSize: 15\r\n    }\r\n})\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FlatList, Image, Platform, Pressable, SafeAreaView, ScrollView, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport colors from \"../constants/colors\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport DishItem, { LoadingDishItem } from \"../components/DishItem\";\r\nimport { useIsFocused } from \"@react-navigation/core\";\r\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\r\n\r\n\r\nconst RestaurantScreen = ({ route, navigation }) => {\r\n    const { restaurantID, restaurantName } = route.params;\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerTitle: restaurantName,\r\n        });\r\n    }, [])\r\n\r\n    const isFocused = useIsFocused()\r\n    // Build a logic to fetch cart items from the database at initial render\r\n    const UID = auth.currentUser.uid\r\n    const userRef = doc(firestore, 'users', UID)\r\n    const restaurantRef = doc(firestore, 'restaurants', restaurantID)\r\n\r\n    const [dishes, setDishes] = useState([])\r\n\r\n    const [cartDishes, setCartDishes] = useState([])\r\n    const [doNotRemoveState, setDoNotRemoveState] = useState(0)\r\n\r\n    const [cartPrice, setCartPrice] = useState(0)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    // getting the dishes which are added in the cart\r\n    useEffect(() => {\r\n        getDishes()\r\n        getCart()\r\n    }, [isFocused == true])\r\n\r\n    // Gets the array of dishIDs and cart total present in the cart\r\n    const getCart = async () => {\r\n        const querySnapshot = await getDoc(userRef)\r\n        let data = querySnapshot.data()\r\n        if (data.cart) {\r\n            if (data.cart.restaurantID == restaurantID) {\r\n                setCartDishes(data.cart.dishes)\r\n                setCartPrice(data.cart.cartTotal)\r\n            }\r\n        }\r\n        setIsLoaded(true)\r\n    }\r\n\r\n    // Updates the cart details like dishes array, cart total, restaurantID in the database \r\n\r\n    const updateCart = () => {\r\n        setDoc(userRef, {\r\n            cart: {\r\n                dishes: cartDishes,\r\n                restaurantID: restaurantID,\r\n                cartTotal: cartPrice\r\n            }\r\n        }, { merge: true })\r\n    }\r\n\r\n    // triggers every time we add an item to the cart\r\n    const addToCart = (id, price) => {\r\n        setDoNotRemoveState(doNotRemoveState + price)\r\n        // Do not remove setDoNotRemoveState as it breaks the functionality even if it not in use\r\n        let arr = cartDishes\r\n        arr.push(id)\r\n        setCartDishes(arr)\r\n        updateCart()\r\n        cartPriceHandler()\r\n    }\r\n\r\n    // Method for getting the cart total amount, updates the state, updates cart total in the database\r\n    const cartPriceHandler = () => {\r\n        let frequency = {}\r\n        for (let num of cartDishes) {\r\n            frequency[num] = frequency[num] ? frequency[num] + 1 : 1\r\n        }\r\n        // This gives me frequency of cart Items as {\"dishID\": occurrences, \"anotherDishID\": occurrences }\r\n\r\n        let priceObj = {}\r\n        dishes.forEach(el => {\r\n            priceObj[el.dishID] = el.price\r\n        })\r\n        // This gives me priceObj as {\"dishID\":itsPrice, \"anotherDishID\":itsPrice}\r\n        let price = 0\r\n        for (let i in priceObj) {\r\n            for (let j in frequency) {\r\n                if (j == i) {\r\n                    price += (priceObj[i] * frequency[j])\r\n                }\r\n            }\r\n        }\r\n        setCartPrice(price)\r\n\r\n        // Seems similar to updateCart but is not. It uses a local variable instead of a state variable to update cart total to the database \r\n        setDoc(userRef, {\r\n            cart: {\r\n                dishes: cartDishes,\r\n                restaurantID: restaurantID,\r\n                cartTotal: price\r\n            }\r\n        }, { merge: true })\r\n    }\r\n\r\n    // triggers every time we remove an item to the cart\r\n    const removeFromCart = (id, price) => {\r\n        let removeDishes = cartDishes\r\n        let index = removeDishes.indexOf(id)\r\n        if (index > -1) {\r\n            removeDishes.splice(index, 1)\r\n        }\r\n        setCartDishes(removeDishes)\r\n        // Do not remove setDoNotRemoveState as it breaks the functionality even if it not in use\r\n        setDoNotRemoveState(doNotRemoveState - price)\r\n        updateCart()\r\n        cartPriceHandler()\r\n    }\r\n\r\n    // Method for getting the amount of same dishes in the cart => returns a number\r\n    const getQuantity = (id) => {\r\n        let array = []\r\n        for (var i of cartDishes) {\r\n            array.push(i)\r\n        }\r\n        let count = {}\r\n        for (let num of array) {\r\n            count[num] = count[num] ? count[num] + 1 : 1\r\n        }\r\n        return (count[id])\r\n    }\r\n\r\n    // gets all the dishes from the restaurant and updates the state to an array of dishIDs\r\n    const getDishes = async () => {\r\n        const querySnapshot = await getDoc(restaurantRef)\r\n        let data = querySnapshot.data()\r\n        let dishesArr = data.dishes\r\n        setDishes(dishesArr)\r\n    }\r\n\r\n    const Cart = () => <View style={[cartStyles.container,\r\n    { display: cartDishes.length == 0 ? \"none\" : \"flex\" }\r\n    ]}>\r\n        {Platform.OS == \"android\"\r\n            ?\r\n            <Pressable onPress={() => {\r\n                navigation.navigate('Cart')\r\n            }} android_ripple={{ color: colors.light, }} style={cartStyles.subContainer}>\r\n                <View>\r\n                    <Text style={cartStyles.detailsText}>{cartDishes.length} Item{cartDishes.length == 1 ? '' : 's'} {/*'s' only when more than one items*/} |  ₹{cartPrice}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={cartStyles.text}>Go to cart</Text>\r\n                </View>\r\n            </Pressable>\r\n            :\r\n            <TouchableOpacity onPress={() => {\r\n                navigation.navigate('Cart')\r\n            }} style={cartStyles.subContainer}>\r\n                <View>\r\n                    <Text style={cartStyles.detailsText}>{cartDishes.length} Item{cartDishes.length == 1 ? '' : 's'} {/*'s' only when more than one items*/} |  ₹{cartPrice}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={cartStyles.text}>Go to cart</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n        }\r\n        {/* Add conditional touchable opacity support for ios devices  */}\r\n\r\n    </View>\r\n\r\n    const LoadingDishes = () => {\r\n        return (\r\n            <ScrollView>\r\n                <LoadingDishItem image description/>\r\n                <LoadingDishItem description/>\r\n                <LoadingDishItem description/>\r\n                <LoadingDishItem image description/>\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n\r\n        {!isLoaded?<LoadingDishes/>:\r\n            <FlatList\r\n                data={dishes}\r\n                renderItem={({ item }) =>\r\n                    <DishItem\r\n                        cartDishes={cartDishes}\r\n                        dishName={item.name}\r\n                        isNonVeg={item.nonveg}\r\n                        getQuantity={getQuantity(item.dishID)}\r\n                        price={item.price}\r\n                        description={item.description}\r\n                        image={item.imageURI}\r\n                        id={item.dishID}\r\n                        addToCart={() => addToCart(item.dishID, item.price)}\r\n                        removeFromCart={() => removeFromCart(item.dishID, item.price)}\r\n                    />\r\n                }\r\n                keyExtractor={item => item.dishID}\r\n            />\r\n        }\r\n            <Cart />\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default RestaurantScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        margin: 10,\r\n    },\r\n});\r\n\r\n\r\nconst cartStyles = StyleSheet.create({\r\n    container: {\r\n        borderRadius: 10,\r\n        backgroundColor: colors.primary,\r\n        overflow: 'hidden',\r\n        height: 50,\r\n        marginHorizontal: 20,\r\n        marginBottom: 10,\r\n    },\r\n    subContainer: {\r\n        paddingHorizontal: 20,\r\n        height: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n    detailsText: {\r\n        color: colors.text.dark,\r\n        fontWeight: '700',\r\n    },\r\n    text: {\r\n        color: colors.text.dark,\r\n        textTransform: 'uppercase',\r\n        fontWeight: '700',\r\n    }\r\n})","const config = {\r\n    screens: {\r\n        Home:{\r\n            screens:{\r\n                Explore: {\r\n                    path: \"Explore\"\r\n                },\r\n                Account: {\r\n                    path: \"Account\"\r\n                },\r\n                Cart: {\r\n                    path: \"Cart\"\r\n                }\r\n            }\r\n        },\r\n        Restaurant_Screen: {\r\n            path: \"Restaurant/:restaurantID/:restaurantName\",\r\n        },\r\n        Login: {\r\n            path: \"auth\"\r\n        }\r\n    }\r\n}\r\n\r\nconst linking = {\r\n    prefixes: [\"demo://app\"],\r\n    config\r\n}\r\n\r\nexport default linking","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Platform, StyleSheet, Text, View } from 'react-native'\r\nimport Account from '../screens/Account'\r\nimport Explore from '../screens/Explore'\r\nimport LoginScreen from '../screens/LoginScreen'\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Cart from '../screens/Cart'\r\nimport colors from '../constants/colors'\r\nimport { auth, firestore } from '../firebase'\r\nimport EditAccount from '../screens/EditAccount'\r\nimport RestaurantScreen from '../screens/RestaurantScreen'\r\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\r\nimport LottieView from 'lottie-react-native';\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport Lottie from 'lottie-react';\r\nimport linking from './linking'\r\n\r\nconst Stack = createNativeStackNavigator()\r\nconst Tab = createBottomTabNavigator();\r\nconst Home = () => {\r\n\r\n    const navigation = useNavigation()\r\n    const isFocused = useIsFocused()\r\n\r\n    const UID = auth.currentUser.uid\r\n    const [badgeNumber, setBadgeNumber] = useState(0)\r\n    const userRef = doc(firestore, 'users', UID)\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = navigation.addListener('focus', () => {\r\n            // The screen is focused\r\n            // Call any action\r\n            const setCartQuantity = async () => {\r\n                const querySnapshot = await getDoc(userRef)\r\n                let data = querySnapshot.data()\r\n                setBadgeNumber(data.cart.dishes.length)\r\n            }\r\n            setCartQuantity()\r\n        });\r\n\r\n        // Return the function to unsubscribe from the event so it gets removed on unmount\r\n        return unsubscribe;\r\n    }, [isFocused]);\r\n\r\n    return (\r\n        <Tab.Navigator screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused }) => {\r\n                let icon;\r\n                if (route.name === \"Explore\") {\r\n                    icon = <Entypo name=\"home\" size={24} color={focused ? colors.primary : colors.light} />\r\n                }\r\n                else if (route.name === \"Account\") {\r\n                    icon = <MaterialCommunityIcons name=\"account\" size={24} color={focused ? colors.primary : colors.light} />\r\n                }\r\n                else if (route.name === \"Cart\") {\r\n                    icon = <Entypo name=\"shopping-bag\" size={24} color={focused ? colors.primary : colors.light} />\r\n                }\r\n                return icon;\r\n            }\r\n        })}>\r\n            <Tab.Screen name=\"Explore\" component={Explore} />\r\n            <Tab.Screen name=\"Cart\" component={Cart} options={{ tabBarBadge: 50 }} />\r\n            <Tab.Screen name=\"Account\" component={Account} />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\nconst MyTheme = {\r\n    dark: true,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: colors.primary,\r\n        background: colors.background,\r\n        card: colors.dark,\r\n        text: 'white'\r\n    },\r\n};\r\n\r\nconst RootNavigator = () => {\r\n\r\n    const [isUserSignedIn, setIsUserSignedIn] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    useEffect(() => {\r\n        const script = document.createElement(\"script\")\r\n        script.src = \"https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js\"\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                setIsUserSignedIn(true)\r\n            }\r\n            else {\r\n                setIsUserSignedIn(false)\r\n            }\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n            // setIsLoading(false)\r\n            // setTimeout(() => {\r\n            //     setIsLoading(false)\r\n            // }, 1200);\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const AuthStack = createNativeStackNavigator()\r\n    const AuthStackScreen = () => (\r\n        <AuthStack.Navigator>\r\n            <AuthStack.Screen name=\"Login\" component={LoginScreen} />\r\n        </AuthStack.Navigator>\r\n    )\r\n\r\n    const AppStack = createNativeStackNavigator()\r\n    const AppStackScreen = () => (\r\n        <View style={{ backgroundColor: colors.background, flex: 1 }}>\r\n            <AppStack.Navigator >\r\n                <AppStack.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\r\n                <AppStack.Screen name=\"Edit_Account\" component={EditAccount} options={{ title: \"Edit Account\" }} />\r\n                <AppStack.Screen name=\"Restaurant_Screen\" component={RestaurantScreen} />\r\n                <AppStack.Screen name=\"Cart\" component={Cart} />\r\n            </AppStack.Navigator>\r\n        </View>\r\n    )\r\n\r\n    return (\r\n        <NavigationContainer linking={linking} theme={MyTheme}>\r\n            <View style={{ backgroundColor: colors.background, flex: 1 }}>\r\n                {isLoading ?\r\n                    <div style={{flex:1, justifyContent:'center', display:'flex'}}>\r\n                        <Lottie animationData={require('../assets/animations/logo.json')}/>\r\n                    </div> :\r\n                    isUserSignedIn ? <AppStackScreen /> : <AuthStackScreen />\r\n                }\r\n            </View>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nexport default RootNavigator\r\n\r\nconst styles = StyleSheet.create({})\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { LogBox, View } from 'react-native';\r\nimport colors from './constants/colors';\r\nimport RootNavigator from './navigation/RootNavigator';\r\n\r\nexport default function App() {\r\n  LogBox.ignoreAllLogs()\r\n  return (\r\n    <>\r\n      <StatusBar style=\"light\" backgroundColor={colors.dark} />\r\n      <RootNavigator />\r\n    </>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/nonveg.352531a6.png\";","module.exports = __webpack_public_path__ + \"static/media/veg.0f6892d0.png\";"],"sourceRoot":""}